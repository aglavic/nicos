description = 'Devices for the ZEBRA monochromator'

mota = 'SQ:ZEBRA:mota:'
motb = 'SQ:ZEBRA:motb:'
motd = 'SQ:ZEBRA:motd:'

includes = ['sps']

devices = dict(
    mtvl = device('nicos_ess.devices.epics.motor.EpicsMotor',
        epicstimeout = 3.0,
        description = 'Lower monochromator vertical translation',
        motorpv = mota + 'MTVL',
        errormsgpv = mota + 'MTVL-MsgTxt',
        precision = 0.5,
    ),
    mtpl = device('nicos_ess.devices.epics.motor.EpicsMotor',
        epicstimeout = 3.0,
        description = 'Lower monochromator paralell translation',
        motorpv = mota + 'MTPL',
        errormsgpv = mota + 'MTPL-MsgTxt',
        precision = 0.5,
    ),
    mgvl = device('nicos_ess.devices.epics.motor.EpicsMotor',
        epicstimeout = 3.0,
        description = 'Lower monochromator vertical goniometer',
        motorpv = mota + 'MGVL',
        errormsgpv = mota + 'MGVL-MsgTxt',
        precision = 0.5,
    ),
    mgpl = device('nicos_ess.devices.epics.motor.EpicsMotor',
        epicstimeout = 3.0,
        description = 'Lower monochromator paralell goniometer',
        motorpv = mota + 'MGPL',
        errormsgpv = mota + 'MGPL-MsgTxt',
        precision = 0.5,
    ),
    moml = device('nicos_ess.devices.epics.motor.EpicsMotor',
        epicstimeout = 3.0,
        description = 'Lower monochromator omega',
        motorpv = mota + 'MOML',
        errormsgpv = mota + 'MOML-MsgTxt',
        precision = 0.5,
    ),
    mtvu = device('nicos_ess.devices.epics.motor.EpicsMotor',
        epicstimeout = 3.0,
        description = 'Upper monochromator vertical translation',
        motorpv = mota + 'MTVU',
        errormsgpv = mota + 'MTVU-MsgTxt',
        precision = 0.5,
    ),
    mtpu = device('nicos_ess.devices.epics.motor.EpicsMotor',
        epicstimeout = 3.0,
        description = 'Upper monochromator paralell translation',
        motorpv = mota + 'MTPU',
        errormsgpv = mota + 'MTPU-MsgTxt',
        precision = 0.5,
    ),
    mgvu = device('nicos_ess.devices.epics.motor.EpicsMotor',
        epicstimeout = 3.0,
        description = 'Upper monochromator vertical goniometer',
        motorpv = mota + 'MGVU',
        errormsgpv = mota + 'MGVU-MsgTxt',
        precision = 0.5,
    ),
    mgpu = device('nicos_ess.devices.epics.motor.EpicsMotor',
        epicstimeout = 3.0,
        description = 'Upper monochromator paralell goniometer',
        motorpv = mota + 'MGPU',
        errormsgpv = mota + 'MGPU-MsgTxt',
        precision = 0.5,
    ),
    momu = device('nicos_ess.devices.epics.motor.EpicsMotor',
        epicstimeout = 3.0,
        description = 'Upper monochromator omega',
        motorpv = mota + 'MOMU',
        errormsgpv = mota + 'MOMU-MsgTxt',
        precision = 0.5,
    ),
    mcvl = device('nicos_ess.devices.epics.motor.EpicsMotor',
        epicstimeout = 3.0,
        description = 'Lower monochromator curvature',
        motorpv = mota + 'MCVL',
        errormsgpv = mota + 'MCVL-MsgTxt',
        precision = 0.5,
    ),
    mcvu = device('nicos_ess.devices.epics.motor.EpicsMotor',
        epicstimeout = 3.0,
        description = 'Upper monochromator curvature',
        motorpv = motb + 'MCVU',
        errormsgpv = motb + 'MCVU-MsgTxt',
        precision = 0.5,
    ),
    mexz = device('nicos_ess.devices.epics.motor.EpicsMotor',
        epicstimeout = 3.0,
        description = 'Monochromator lift',
        motorpv = motb + 'MEXZ',
        errormsgpv = motb + 'MEXZ-MsgTxt',
        precision = 0.5,
    ),
    wavelength = device('nicos_sinq.zebra.devices.zebrawl.ZebraWavelength',
        description = 'Wavelength for ZEBRA',
        unit = 'A-1',
        mexz = 'mexz',
        pg = 'pgfilter',
        moml = 'moml',
        mcvl = 'mcvl',
        momu = 'momu',
        mcvu = 'mcvu',
    ),
    cex1 = device('nicos_ess.devices.epics.motor.EpicsMotor',
        epicstimeout = 3.0,
        description = 'First collimator drum',
        motorpv = motd + 'CEX1',
        errormsgpv = motd + 'CEX1-MsgTxt',
        precision = 0.5,
    ),
    cex2 = device('nicos_ess.devices.epics.motor.EpicsMotor',
        epicstimeout = 3.0,
        description = 'Second collimator drum',
        motorpv = motd + 'CEX2',
        errormsgpv = motd + 'CEX2-MsgTxt',
        precision = 0.5,
    ),
)
